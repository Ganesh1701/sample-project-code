{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Js\\\\React apps\\\\sample react app\\\\sample-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [isMount, setIsMount] = useState(true); // will execute for each and every state and prop change(ComponentDidUpdate)\n\n  useEffect(() => {\n    document.title = \"I clicked\" + count + \"times\";\n  }); // will execute only count changes not for name changes(ComponentDidUpdate)\n\n  useEffect(() => {\n    document.title = \"I clicked\" + count + \"times\";\n  }, [count]);\n\n  const onClick = () => {\n    setCount(prev => prev + 1);\n    setIsMount(!isMount);\n  };\n\n  const changeName = () => {\n    setName(pre => pre + \"a\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Count:\", count, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \"IncCount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeName,\n        children: \"ChangeName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this), isMount && /*#__PURE__*/_jsxDEV(UnMounting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Example, \"GBP6P1qSh9ukoDx1KWsWophkA1Y=\");\n\n_c = Example;\nexport default Example;\n\nfunction UnMounting(props) {\n  _s2();\n\n  //useEffect like componentMillUnmount\n  useEffect(() => {\n    let intervalId = setInterval(() => {\n      alert(\"hello\");\n    }, 5000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"I'M UNMOUNTING COMPONENT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 29\n  }, this);\n}\n\n_s2(UnMounting, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = UnMounting;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"UnMounting\");","map":{"version":3,"sources":["D:/React Js/React apps/sample react app/sample-app/src/App.js"],"names":["React","useEffect","useState","Example","count","setCount","name","setName","isMount","setIsMount","document","title","onClick","prev","changeName","pre","UnMounting","props","intervalId","setInterval","alert","clearInterval"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;;;AACwB,MAAMC,OAAO,GAAC,MAAI;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBH,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAM,CAACI,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACM,OAAD,EAASC,UAAT,IAAqBP,QAAQ,CAAC,IAAD,CAAnC,CAHkB,CAKlB;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,QAAQ,CAACC,KAAT,GAAe,cAAaP,KAAb,GAAoB,OAAnC;AACH,GAFQ,CAAT,CANkB,CAStB;;AACIH,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,QAAQ,CAACC,KAAT,GAAe,cAAaP,KAAb,GAAoB,OAAnC;AACH,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;;AAIJ,QAAMQ,OAAO,GAAC,MAAI;AACdP,IAAAA,QAAQ,CAAEQ,IAAD,IAAQA,IAAI,GAAC,CAAd,CAAR;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAHD;;AAIA,QAAMM,UAAU,GAAC,MAAI;AACjBP,IAAAA,OAAO,CAAEQ,GAAD,IAAOA,GAAG,GAAC,GAAZ,CAAP;AACH,GAFD;;AAGA,sBAAO;AAAA,yBACAX,KADA,eAEP;AAAA,6BAAI;AAAQ,QAAA,OAAO,EAAEQ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFO,eAGP;AAAA,6BAAI;AAAQ,QAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHO,eAIP;AAAA,gBAAIR;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJO,EAKNE,OAAO,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALL;AAAA,kBAAP;AAOC,CA5BG;;GAAML,O;;KAAAA,O;AA6BV,eAAeA,OAAf;;AAGA,SAASa,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAC3B;AACIhB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIiB,UAAU,GAAEC,WAAW,CAAC,MAAI;AAC5BC,MAAAA,KAAK,CAAC,OAAD,CAAL;AACH,KAF0B,EAEzB,IAFyB,CAA3B;AAGA,WAAO,MAAI;AACXC,MAAAA,aAAa,CAACH,UAAD,CAAb;AACC,KAFD;AAGH,GAPQ,EAOP,EAPO,CAAT;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAhBQF,U;;MAAAA,U","sourcesContent":["import React, { useEffect,useState } from \"react\"\r\n                        const Example=()=>{\r\n                        const [count,setCount]=useState(0)\r\n                        const [name,setName]=useState(\"\")\r\n                        const [isMount,setIsMount]=useState(true)\r\n                    \r\n                        // will execute for each and every state and prop change(ComponentDidUpdate)\r\n                        useEffect(()=>{\r\n                            document.title=\"I clicked\"+ count +\"times\"\r\n                        })\r\n                    // will execute only count changes not for name changes(ComponentDidUpdate)\r\n                        useEffect(()=>{\r\n                            document.title=\"I clicked\"+ count +\"times\"\r\n                        },[count])\r\n\r\n                    const onClick=()=>{\r\n                        setCount((prev)=>prev+1)\r\n                        setIsMount(!isMount)\r\n                    }\r\n                    const changeName=()=>{\r\n                        setName((pre)=>pre+\"a\")\r\n                    }\r\n                    return <>\r\n                    Count:{count}\r\n                    <h1><button onClick={onClick}>IncCount</button></h1>\r\n                    <h1><button onClick={changeName}>ChangeName</button></h1>\r\n                    <p>{name}</p>\r\n                    {isMount && <UnMounting/>}\r\n                    </>\r\n                    }\r\n                    export default Example\r\n\r\n\r\n                    function UnMounting(props) {\r\n                    //useEffect like componentMillUnmount\r\n                        useEffect(()=>{\r\n                            let intervalId= setInterval(()=>{\r\n                                alert(\"hello\")\r\n                            },5000)\r\n                            return ()=>{\r\n                            clearInterval(intervalId)\r\n                            }\r\n                        },[])\r\n                        \r\n                        return (\r\n                            <div>\r\n                                I'M UNMOUNTING COMPONENT\r\n                            </div>\r\n                        );\r\n                    }"]},"metadata":{},"sourceType":"module"}